import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as l,a as e,b as t,d as n,w as r,e as o}from"./app-3dGJw9wW.js";const u={},m=o(`<h1 id="编写复杂文案" tabindex="-1"><a class="header-anchor" href="#编写复杂文案"><span>编写复杂文案</span></a></h1><div class="hint-container info"><p class="hint-container-title">本节内容</p><p>本节将展示复杂文案的编写技巧，请善用侧边栏和搜索，按需阅读文档。</p></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><h3 id="根据骰点结果展示不同文案" tabindex="-1"><a class="header-anchor" href="#根据骰点结果展示不同文案"><span>根据骰点结果展示不同文案</span></a></h3><p>在文案中通常会有结果变量，通过对结果变量的判断来实现展示不同文案。如修改 <code>.r 骰点_单项结果文本</code> 文案为例</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{$t表达式文本}{$t计算过程}={$t计算结果}{%
$t计算结果 == 100 ? &quot; 乐！&quot;,
$t计算结果 == 1 ? &quot; 啧！&quot;
%}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p={class:"hint-container note"},h=e("p",{class:"hint-container-title"},"示例",-1),v=e("h3",{id:"多套文案的实现",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#多套文案的实现"},[e("span",null,"多套文案的实现")])],-1),_={class:"hint-container note"},x=e("p",{class:"hint-container-title"},"了解自定义回复的编写",-1),g=e("p",null,"如果你想使用 JS 插件实现也是可以的，不过示例以更简单的自定义回复为例。",-1),b=o(`<h4 id="切换命令实现" tabindex="-1"><a class="header-anchor" href="#切换命令实现"><span>切换命令实现</span></a></h4><p>正则匹配：<code>mode switch(.*)</code> 回复：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{%
if $t1==&quot;&quot;||$t1==&quot; 默认&quot; {$g文案模式 = 0; $t输出=&quot;默认模式启用&quot;};
if $t1==&quot; 模式1&quot; {$g文案模式 = 1; $t输出=&quot;模式1启用&quot;};  
if $t1==&quot; 模式2&quot; {$g文案模式 = 2; $t输出=&quot;模式2启用&quot;};
if $t1!=&quot;&quot;&amp;&amp;$t1!=&quot; 默认&quot;&amp;&amp;$t1!=&quot; 模式1&quot;&amp;&amp;$t1!=&quot; 模式2&quot; {$t输出=\`不存在指定模式{$t1}\`};  
$t输出
%}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>精确匹配：<code>mode show</code> 回复：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{% 
$g文案模式==0 ? &quot;当前在默认模式&quot;,
$g文案模式==1 ? &quot;当前在模式1&quot; ,
$g文案模式==2 ? &quot;当前在模式2&quot;
%}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文案调整" tabindex="-1"><a class="header-anchor" href="#文案调整"><span>文案调整</span></a></h4><p>按如下模式调整你的自定义文案项：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>{
if $g文案模式 == 0 {$t目标文案 = \`（这里填你个性化的默认模式文案）\`};
if $g文案模式 == 1 {$t目标文案 = \`（这里填你个性化的模式1文案）\`};
if $g文案模式 == 2 {$t目标文案 = \`（这里填你个性化的模式2文案）\`}
}{$t目标文案}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="展示" tabindex="-1"><a class="header-anchor" href="#展示"><span>展示</span></a></h4><p>以修改了 <code>.jrrp</code> 的文案为例：</p>`,10),$={class:"hint-container note"},q=e("p",{class:"hint-container-title"},"示例",-1);function f(y,w){const a=i("ChatBox"),s=i("RouteLink");return c(),l("div",null,[m,e("div",p,[h,t(a,{messages:[{content:".r",send:!0},{content:"<木落>掷出了 D100=1 啧！"},{content:".r",send:!0},{content:"<木落>掷出了 D100=100 乐！"}]},null,8,["messages"])]),v,e("div",_,[x,e("p",null,[n("多套文案的实现一般需要用到「自定义回复」来提供切换命令，见 "),t(s,{to:"/advanced/edit_reply.html"},{default:r(()=>[n("编写自定义回复")]),_:1}),n("。")]),g]),b,e("div",$,[q,t(a,{messages:[{content:"mode show",send:!0},{content:"默认模式启用"},{content:"mode switch 模式1",send:!0},{content:"模式1启用"},{content:"mode show",send:!0},{content:"当前在模式1"},{content:".jrrp",send:!0},{content:"（这里填你个性化的模式1文案）"},{content:"mode switch 模式2",send:!0},{content:"模式2启用"},{content:".jrrp",send:!0},{content:"（这里填你个性化的模式2文案）"},{content:"mode switch",send:!0},{content:"默认模式启用"},{content:".jrrp",send:!0},{content:"（这里填你个性化的默认模式文案）"}]},null,8,["messages"])])])}const j=d(u,[["render",f],["__file","edit_complex_custom_text.html.vue"]]),D=JSON.parse('{"path":"/advanced/edit_complex_custom_text.html","title":"编写复杂文案","lang":"zh-cn","frontmatter":{"lang":"zh-cn","title":"编写复杂文案","description":"编写复杂文案 本节内容 本节将展示复杂文案的编写技巧，请善用侧边栏和搜索，按需阅读文档。 示例 根据骰点结果展示不同文案 在文案中通常会有结果变量，通过对结果变量的判断来实现展示不同文案。如修改 .r 骰点_单项结果文本 文案为例 示例 多套文案的实现 了解自定义回复的编写 多套文案的实现一般需要用到「自定义回复」来提供切换命令，见 。 如果你想使用 ...","head":[["meta",{"property":"og:url","content":"http://localhost:8080/sealdice-manual-next/advanced/edit_complex_custom_text.html"}],["meta",{"property":"og:site_name","content":"海豹手册"}],["meta",{"property":"og:title","content":"编写复杂文案"}],["meta",{"property":"og:description","content":"编写复杂文案 本节内容 本节将展示复杂文案的编写技巧，请善用侧边栏和搜索，按需阅读文档。 示例 根据骰点结果展示不同文案 在文案中通常会有结果变量，通过对结果变量的判断来实现展示不同文案。如修改 .r 骰点_单项结果文本 文案为例 示例 多套文案的实现 了解自定义回复的编写 多套文案的实现一般需要用到「自定义回复」来提供切换命令，见 。 如果你想使用 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-cn"}],["meta",{"property":"og:updated_time","content":"2023-11-07T03:30:33.000Z"}],["meta",{"property":"article:author","content":"SealDice Team"}],["meta",{"property":"article:modified_time","content":"2023-11-07T03:30:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编写复杂文案\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-07T03:30:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SealDice Team\\",\\"url\\":\\"https://github.com/sealdice\\"}]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[{"level":3,"title":"根据骰点结果展示不同文案","slug":"根据骰点结果展示不同文案","link":"#根据骰点结果展示不同文案","children":[]},{"level":3,"title":"多套文案的实现","slug":"多套文案的实现","link":"#多套文案的实现","children":[]}]}],"git":{"createdTime":1698079594000,"updatedTime":1699327833000,"contributors":[{"name":"JustAnotherID","email":"just-another-id@outlook.com","commits":3},{"name":"Xiangze Li","email":"lee_johnson@qq.com","commits":1}]},"readingTime":{"minutes":2.15,"words":644},"filePathRelative":"advanced/edit_complex_custom_text.md","localizedDate":"2023年10月23日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">本节内容</p>\\n<p>本节将展示复杂文案的编写技巧，请善用侧边栏和搜索，按需阅读文档。</p>\\n</div>\\n<h2>示例</h2>\\n<h3>根据骰点结果展示不同文案</h3>\\n<p>在文案中通常会有结果变量，通过对结果变量的判断来实现展示不同文案。如修改 <code>.r 骰点_单项结果文本</code> 文案为例</p>\\n<div class=\\"language-text\\" data-ext=\\"text\\" data-title=\\"text\\"><pre class=\\"language-text\\"><code>{$t表达式文本}{$t计算过程}={$t计算结果}{%\\n$t计算结果 == 100 ? \\" 乐！\\",\\n$t计算结果 == 1 ? \\" 啧！\\"\\n%}\\n</code></pre></div>"}');export{j as comp,D as data};
